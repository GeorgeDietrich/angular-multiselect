// AngularJS Multiselect
// https://github.com/namoscato/angular-multiselect
// 
// Version: 1.2.2
// License: MIT
(function(){"use strict";angular.module("amo.multiselect",["ui.bootstrap.dropdown"])})();(function(){"use strict";angular.module("amo.multiselect").constant("amoMultiselectConfig",{deselectAllText:"Deselect All",filterText:"Search...",isDeselectAllEnabled:true,isDisabled:false,isFilterEnabled:true,isSelectAllEnabled:true,selectAllText:"Select All",selectedSuffixSingularText:"item",selectedSuffixText:"items",selectText:"Select..."})})();(function(){"use strict";angular.module("amo.multiselect").directive("amoMultiselectDropdown",e);function e(){return{link:e,restrict:"E",templateUrl:"amo/multiselect/multiselect-dropdown.html"};function e(e,t,l){var n=e.multiselectDropdown;n.getSelectAllLabel=i;n.toggleAllSelectedState=o;n.toggleSelectedState=s;function i(){if(n.state.isSelectAllCheckboxVisible){return n.isAllSelected?n.text.deselectAll:n.text.selectAll}else if(n.state.isSelectAllEnabled){return n.text.selectAll}return n.text.deselectAll}function o(){var e;n.isAllSelected=!n.isAllSelected;if(!n.state.isSelectAllEnabled){e=false}else if(!n.state.isDeselectAllEnabled){e=true}else{e=n.isAllSelected}angular.forEach(n.optionsFiltered,function(t){angular.forEach(t,function(t){t.selected=e})});n.exposeSelectedOptions()}function s(e){e.selected=!e.selected;n.exposeSelectedOptions()}}}})();(function(){"use strict";e.$inject=["$compile","$parse","$timeout","AmoMultiselectFactory","amoMultiselectConfig","amoMultiselectFormatService","filterFilter"];angular.module("amo.multiselect").directive("amoMultiselect",e);function e(e,t,l,n,i,o,s){return{link:r,require:"ngModel",restrict:"E"};function r(r,u,c,a){var p=c.label?t(c.label):angular.noop,d=T("isDeselectAllEnabled",true),g,f=T("isSelectAllEnabled",true),m=[],b=c.onChange?t(c.onChange):angular.noop,S=c.onToggleDropdown?t(c.onToggleDropdown):angular.noop,w=[];var h=new n(c.options,r),x=r.$new(),D={};x.multiselectDropdown=D;D.groups=[];D.groupOptions={};D.optionsFiltered={};D.filter={};D.state={isDeselectAllEnabled:d,isDisabled:T("isDisabled",true),isFilterEnabled:T("isFilterEnabled",true),isSelectAllEnabled:f,isSelectAllVisible:f||d,isSelectAllCheckboxVisible:f&&d};D.text={deselectAll:T("deselectAllText"),filter:T("filterText"),selectAll:T("selectAllText")};D.exposeSelectedOptions=v;D.getSelectedCount=O;D.hasSelectedMultipleItems=F;D.isGroupVisible=y;D.isSelectAllToggleDisabled=C;D.onToggleDropdown=V;$();function A(e){m.push(h.getLabel(e))}function E(){var e,t,l;m.length=0;D.groupOptions={};D.optionsFiltered={};D.groups=h.getGroups();angular.forEach(h.getOptions(),function(n,i){angular.forEach(n,function(n,o){t=false;l=h.getValue(n);for(e=0;e<w.length;e++){if(angular.equals(w[e],l)){t=true;A(n);break}}if(angular.isUndefined(D.groupOptions[i])){D.groupOptions[i]=[]}D.groupOptions[i].push({id:o,label:h.getLabel(n),value:l,selected:t})})});M()}function v(){var e;m.length=0;w.length=0;angular.forEach(D.groupOptions,function(t,l){angular.forEach(t,function(t,n){if(!t.selected){return}e=h.getOption(n,l);A(e);w.push(h.getValue(e))})});g=true;a.$setViewValue(w);b(x,{label:M()})}function O(){return w.length}function T(e,l){if(angular.isDefined(c[e])){return l?t(c[e])(r):c[e]}return i[e]}function F(){return O()>1}function $(){u.append(e("<amo-multiselect-dropdown></amo-multiselect-dropdown>")(x));r.$on("$destroy",function(){x.$destroy()});r.$watch(h.getOptionsExpression(),function(e){h.setOptions(e);E()},true);r.$watch(function(){return a.$modelValue},function(e){if(g){g=false;return}if(angular.isArray(e)){w=e}E()},true)}function y(e){if(!h.isGrouped()){return false}return s(D.groupOptions[e],D.filter).length>0}function C(){if(!f){return w.length===0}else if(!d){return w.length===h.getOptionsCount()}return false}function V(e){if(!e){l(function(){D.filter={}})}S(x,{isOpen:e})}function M(){var e=c.selectText||i.selectText;if(m.length>0){if(angular.isDefined(m[0])){e=o.joinLabels(m)}else{e=o.pluralize(m,c.selectedSuffixText,c.selectedSuffixSingularText||c.selectedSuffixText)}}D.selectedLabel=e;if(angular.isFunction(p.assign)){p.assign(r,e)}return e}}}})();(function(){"use strict";e.$inject=["$parse"];angular.module("amo.multiselect").factory("AmoMultiselectFactory",e);function e(e){var t=/^\s*(?:([\s\S]+?)\s+as\s+)?([\s\S]+?)(?:\s+group\s+by\s+([\s\S]+?))?\s+for\s+([\$\w][\$\w]*)\s+in\s+([\s\S]+?)\s*$/;return function l(n,i){var o=this;var s;o.getGroup=r;o.getGroups=u;o.getLabel=c;o.getOption=p;o.getOptions=d;o.getOptionsCount=g;o.getOptionsExpression=f;o.getValue=m;o.isGrouped=S;o.setOptions=w;b();function r(e){if(!S()){return null}return s.groupFunction(i,a(e))}function u(e){return s.groups}function c(e){return s.labelFunction(i,a(e))}function a(e){var t={};t[s.value]=e;return t}function p(e,t){if(angular.isUndefined(t)){t=null}return s.groupOptions[t][e]}function d(){return s.groupOptions}function g(){return s.optionsCount}function f(){return s.optionsExpression}function m(e){return s.selectFunction(i,a(e))}function b(){var l=n.match(t);if(l===null){throw new Error('Expected "'+n+'" to be in form of "[_select_ as] _label_ [group by _group_] for _value_ in _array_"')}s={groupFunction:angular.isDefined(l[3])?e(l[3]):null,labelFunction:e(l[2]),optionsExpression:l[5],selectFunction:e(angular.isDefined(l[1])?l[1]:l[4]),value:l[4]}}function S(){return s.groupFunction!==null}function w(e){var t;if(!angular.isArray(e)){throw new Error('Expected "'+s.optionsExpression+'" to be Array')}s.groups=[];s.groupOptions={};s.optionsCount=e.length;e.forEach(function(e){t=r(e);if(angular.isUndefined(s.groupOptions[t])){s.groups.push(t);s.groupOptions[t]=[]}s.groupOptions[t].push(e)});return s.groupOptions}return o}}})();(function(){"use strict";e.$inject=["amoMultiselectConfig"];angular.module("amo.multiselect").service("amoMultiselectFormatService",e);function e(e){var t=this;t.joinLabels=l;t.pluralize=n;function l(e){var t,l;if(e.length===1){return e[0]}l=e.pop();t=e.join(", ");if(e.length>1){t+=","}return t+" and "+l}function n(t,l,n){var i=t.length+" ";if(t.length===1){i+=n||e.selectedSuffixSingularText}else{i+=l||e.selectedSuffixText}return i}}})();angular.module("amo.multiselect").run(["$templateCache",function(e){e.put("amo/multiselect/multiselect-dropdown.html",'<div class="btn-group btn-group-multiselect" auto-close="outsideClick" ng-attr-title="{{ multiselectDropdown.selectedLabel }}" ng-class="{ \'state-selected-multiple\': multiselectDropdown.hasSelectedMultipleItems() }" on-toggle="multiselectDropdown.onToggleDropdown(open)" uib-dropdown> <button type="button" class="btn btn-default" ng-disabled="multiselectDropdown.state.isDisabled" uib-dropdown-toggle> <span class="text" ng-bind="multiselectDropdown.selectedLabel"></span> <span class="badge" ng-bind="multiselectDropdown.getSelectedCount()"></span> <span class="caret"></span> </button> <div uib-dropdown-menu> <input type="text" class="form-control" ng-if="::multiselectDropdown.state.isFilterEnabled" ng-model="multiselectDropdown.filter.label" placeholder="{{ ::multiselectDropdown.text.filter }}"> <ul class="dropdown-menu-list list-unstyled"> <li ng-if="::multiselectDropdown.state.isSelectAllVisible"> <a ng-class="{ \'text-muted\': multiselectDropdown.isSelectAllToggleDisabled() }" ng-click="multiselectDropdown.toggleAllSelectedState()"> <input type="checkbox" ng-if="::multiselectDropdown.state.isSelectAllCheckboxVisible" ng-model="multiselectDropdown.isAllSelected"> <span ng-bind="multiselectDropdown.getSelectAllLabel()"></span> </a> </li> <li class="divider" ng-if="::multiselectDropdown.state.isSelectAllVisible"></li> <li class="dropdown-header" ng-bind="group" ng-if="multiselectDropdown.isGroupVisible(group)" ng-repeat-start="group in multiselectDropdown.groups"> </li> <li ng-repeat="option in multiselectDropdown.optionsFiltered[group] = (multiselectDropdown.groupOptions[group] | filter : multiselectDropdown.filter)"> <a ng-attr-title="{{ option.label }}" ng-click="multiselectDropdown.toggleSelectedState(option)"> <input type="checkbox" ng-model="option.selected"> <span ng-bind="option.label"></span> </a> </li> <li ng-repeat-end></li> </ul> </div> </div> ')}]);